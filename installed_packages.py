#! /usr/bin/env python3

import subprocess
import apt
import logging
from datetime import datetime
import re
from os import environ

LOGLEVEL = environ.get("LOGLEVEL", "ERROR").upper()
logging.basicConfig(level=LOGLEVEL)


class Package:
    # Class auto-generated by GitHub Copilot
    def __init__(self, name, version, install_date):
        self.name = name
        self.version = version
        self.install_date = install_date

    def __repr__(self):
        return f"Package({self.name}, {self.version}, {self.install_date})"

    def __str__(self):
        return f"{self.name}"

    def __dict__(self):
        return {
            "name": self.name,
            "version": self.version,
            "install_date": self.install_date,
        }


def get_packages():
    # Dict to store pkg info
    pkg_list = []
    # loop through each line and extract package name and installation date
    for pkg in apt.Cache():
        if pkg.is_installed:
            logging.debug("package: %s", pkg.name)
            logging.debug("version: %s", pkg.installed.version)
            try:
                date_string = (
                    subprocess.check_output(
                        [
                            "stat",
                            "-c",
                            "%y",
                            "/var/lib/dpkg/info/{}.list".format(pkg.name),
                        ],
                        stderr=subprocess.DEVNULL,
                    )
                    .decode("utf-8")
                    .rstrip()
                )
            except:
                date_string = (
                    subprocess.check_output(
                        [
                            "stat",
                            "-c",
                            "%y",
                            "/var/lib/dpkg/info/{}.list".format(pkg.fullname),
                        ]
                    )
                    .decode("utf-8")
                    .rstrip()
                )

            pkg_date = datetime.strptime(
                re.sub(r"(.*\.\d{6})\d{3}(.*)$", r"\g<1>\g<2>", date_string),
                "%Y-%m-%d %H:%M:%S.%f %z",
            )

            logging.debug("date: %s && type: %s", pkg_date, type(pkg_date))

            pkg_list.append(Package(pkg.name, pkg.installed.version, pkg_date))

    return pkg_list
